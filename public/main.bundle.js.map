{"version":3,"sources":["/home/bhaskar/bra/expert-spoon/ui/src/$_lazy_route_resource lazy","/home/bhaskar/bra/expert-spoon/ui/src/app/app.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/app.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/app.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/app.module.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/dashboard/dashboard.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/dashboard/dashboard.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/dashboard/dashboard.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/footer/footer.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/footer/footer.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/footer/footer.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/home/home.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/home/home.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/home/home.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/layout/layout.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/layout/layout.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/layout/layout.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/login/login.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/login/login.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/login/login.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/questions/questions.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/questions/questions.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/questions/questions.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/components/signup/signup.component.css","/home/bhaskar/bra/expert-spoon/ui/src/app/components/signup/signup.component.html","/home/bhaskar/bra/expert-spoon/ui/src/app/components/signup/signup.component.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/services/answer.service.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/services/auth-guard.service.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/services/auth.service.ts","/home/bhaskar/bra/expert-spoon/ui/src/app/services/question.service.ts","/home/bhaskar/bra/expert-spoon/ui/src/environments/environment.ts","/home/bhaskar/bra/expert-spoon/ui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<layout>\\n\\n</layout>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/app.component.ts","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { environment } from \"../environments/environment\";\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\n// services\nimport { AuthService } from \"./services/auth.service\";\nimport { AuthGuard } from \"./services/auth-guard.service\";\nimport { QuestionService } from \"./services/question.service\";\nimport { AnswerService } from \"./services/answer.service\";\n\n// angular material compnents\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\n\n// components\nimport { AppComponent } from \"./app.component\";\nimport { LayoutComponent } from \"./components/layout/layout.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { QuestionsComponent } from \"./components/questions/questions.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { SignupComponent } from \"./components/signup/signup.component\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\n\nconst appRoutes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"login\", component: LoginComponent, pathMatch: \"full\" },\n  { path: \"signup\", component: SignupComponent, pathMatch: \"full\" },\n  { path: \"home\", component: HomeComponent, pathMatch: \"full\" },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"questions\", component: QuestionsComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    LoginComponent,\n    DashboardComponent,\n    QuestionsComponent,\n    HomeComponent,\n    SignupComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatTabsModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    MatProgressBarModule\n  ],\n  providers: [AuthService, AuthGuard, QuestionService, AnswerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".file-upload{\\n    max-width: 50%;\\n    margin: 30px; \\n    margin-left: 20%   \\n}\\n\\n.upload-button{\\n    background-color: #3f51b5;\\n    color: white;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n    display: none;\\n}\\n\\n#custom-file-input {\\n    border: 1px solid #ccc;\\n    display: inline-block;\\n    cursor: pointer;\\n}\\n\\n.progress-bar{\\n    max-width: 50%;\\n    margin: 30px; \\n    margin-left: 20%; \\n    margin-top: 0%\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"upload-container\\\">\\n    <mat-card class=\\\"file-upload\\\">\\n        <mat-card-header class=\\\"file-upload-header\\\">\\n            <mat-card-title>Upload questions</mat-card-title>\\n        </mat-card-header>\\n    \\n        <mat-card-content class=\\\"file-upload-content\\\" >\\n            <div class=\\\"upload-form\\\" fxLayout=\\\"column\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Enterprise Id\\\" [(ngModel)]=\\\"enterpriseId\\\">\\n                </mat-form-field> \\n                <div >\\n                    <button id=\\\"custom-file-input\\\"mat-button class=\\\"upload-button\\\" >\\n                        Choose file\\n                    </button>\\n                    <input id=\\\"file-input\\\" name=\\\"myFile\\\" type=\\\"file\\\" (change)=\\\"encodeFile()\\\" >\\n                </div>\\n            </div>\\n        </mat-card-content>\\n        \\n        <mat-card-actions>\\n            <button class=\\\"upload-button\\\" mat-button (click)=\\\"onUpload()\\\">Upload</button>\\n        </mat-card-actions>\\n    </mat-card>\\n\\n    <!--<mat-progress-bar\\n          [class.hidden] = \\\"progressBar\\\"\\n          class=\\\"progress-bar\\\"\\n          color='primary'\\n          mode=\\\"indeterminate\\\"\\n          value= 20\\n          bufferValue= 75>\\n      </mat-progress-bar>-->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../../services/question.service';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  enterpriseId;\n  fileName;\n  data;\n  progressBar = true;\n  constructor(private service: QuestionService, public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    let fileInput = document.getElementById('file-input');\n    let customInput = document.getElementById('custom-file-input');\n\n    customInput.addEventListener('click',()=>{\n      fileInput.click();\n      //console.log(fileInput);\n    });\n\n    fileInput.addEventListener('change',(event) =>{\n      this.fileName = (event.target as HTMLInputElement).value.replace(/^.*[\\\\\\/]/, '')\n      customInput.innerText = this.fileName;    \n    });\n  }\n  encodeFile(){\n    let doc = document.querySelector('input[type=file]') as HTMLInputElement;\n    let file = doc.files[0];\n    \n    let dataPromise = new Promise((resolve,reject) =>{\n\n      let reader = new FileReader() as any;\n      reader.onload = function (event) {\n        resolve(reader.result.split(',')[1]);\n      };\n      reader.onerror = function (error) {\n        reject(error);\n        console.log('Error: ', error);\n      };\n  \n      reader.readAsDataURL(file);\n    }).then(base64 =>{\n        this.data = base64;\n    })        \n  }\n\n  onUpload() {\n    let options = {\n      entId: this.enterpriseId,\n      data: this.data,\n      fileName: this.fileName\n    }\n\n    this.service.uploadQuestions(options).subscribe(response =>{\n      console.log(response);\n      if(response.status === 201) {\n        this.snackBar.open('Questions uploaded!','OK',{\n          duration: 2000\n        });\n      } else {\n        this.snackBar.open('Something went wrong','OK',{\n          duration: 2000\n        });\n      }\n      this.enterpriseId = '';\n      this.data = '';\n      this.fileName = '';\n      document.getElementById('custom-file-input').innerText = 'Choose file';\n  });\n    //console.log(this.enterpriseId,this.fileName,this.data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#container {\\n  position: relative;\\n}\\n\\n#footer {\\n  position: absolute;\\n  bottom: 0%;\\n  right: 0%;\\n  left: 0%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/footer/footer.component.css\n// module id = ../../../../../src/app/components/footer/footer.component.css\n// module chunks = main","module.exports = \"<div id=\\\"container\\\" layout=\\\"row\\\" fullscreen>\\n  <div fxLayout fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\">\\n    <mat-toolbar id=\\\"footer\\\" color='primary'>\\n      <div>\\n        About us\\n      </div>\\n      <div>\\n        Contact us\\n      </div>\\n    </mat-toolbar>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/footer/footer.component.html\n// module id = ../../../../../src/app/components/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.css\"]\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/footer/footer.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  display: table;\\n  width: 100%;\\n  margin: 0 auto;\\n}\\n\\n#content {\\n  margin: 10%;\\n  background-color: #dcdcdc;\\n}\\n\\n.card-header {\\n  font-weight: bold;\\n  font-size: 125%;\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <mat-card id=\\\"content\\\">\\n    <mat-card-header fxLayoutAlign=\\\"center\\\">\\n      <mat-card-title class=\\\"card-header\\\">\\n        The ultimate feedback tool\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      Create customised feedback surveys for employees of different hierachical levels and review with statistical results.\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*#closeNavIcon{\\n    float:right;\\n  }*/\\n\\n#sideNav {\\n  color: #3f51b5;\\n  width: 15%;\\n}\\n\\n#navHeader {\\n  height: 40px;\\n  padding-left: 10px;\\n  margin-bottom: 20px;\\n}\\n\\n#navHeader #projectName {\\n  margin: 10px 10px 10px 5px;\\n  display: inline-block;\\n  font-size: 20px;\\n}\\n\\n.navLinks {\\n  font-size: 14px;\\n}\\n\\n.active {\\n  background: #f5f5f5;\\n}\\n\\n.login-chip {\\n  color: #3f51b5;\\n  font-weight: bold;\\n  margin: 10px;\\n}\\n\\n.home-link {\\n  cursor: pointer;\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n#header {\\n  -webkit-box-shadow: 10px 2px 5px black;\\n          box-shadow: 10px 2px 5px black;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/layout/layout.component.css\n// module id = ../../../../../src/app/components/layout/layout.component.css\n// module chunks = main","module.exports = \"<!--*ngIf=\\\"auth.isLoggedIn()\\\"-->\\n<mat-sidenav-container layout=\\\"row\\\" fullscreen>\\n  <div class=\\\"container\\\" id=\\\"header\\\" fxLayout fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\">\\n\\n    <mat-toolbar role=\\\"header\\\" color=\\\"primary\\\">\\n\\n      <div class=\\\"text-left\\\" fxFlex=\\\"15%\\\">\\n        <button mat-icon-button (click)=\\\"menu.open()\\\" *ngIf=\\\"auth.isLoggedIn()\\\">\\n          <mat-icon>menu</mat-icon>\\n        </button>\\n      </div>\\n\\n      <div fxFlex=\\\"70%\\\">\\n        <span id=\\\"place\\\" routerLink=\\\"/home\\\" class=\\\"home-link\\\">{{projectName}}</span>\\n      </div>\\n\\n      <div fxFlex=\\\"15%\\\">\\n        <div *ngIf=\\\"auth.isLoggedIn() else notLoggedIn\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"userMenu\\\">\\n            <mat-icon>person</mat-icon>\\n          </button>\\n        </div>\\n        <ng-template #notLoggedIn>\\n          <div>\\n            <a mat-raised-button class=\\\"login-chip\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"hide\\\">\\n              Login\\n            </a>\\n\\n            <a mat-raised-button class=\\\"login-chip\\\" routerLink=\\\"/signup\\\" routerLinkActive=\\\"hide\\\">\\n              Signup\\n            </a>\\n\\n          </div>\\n        </ng-template>\\n      </div>\\n\\n    </mat-toolbar>\\n\\n  </div>\\n\\n  <div>\\n    <mat-menu #userMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n      <button mat-menu-item (click)=\\\"logoutUser()\\\">\\n        <span>Logout</span>\\n      </button>\\n    </mat-menu>\\n  </div>\\n\\n  <router-outlet></router-outlet>\\n  <!-- <login></login> -->\\n  <!-- Routed views go here -->\\n\\n\\n  <mat-sidenav id=\\\"sideNav\\\" color=\\\"primary\\\" #menu>\\n    <mat-nav-list>\\n      <div id=\\\"navHeader\\\" routerLink=\\\"/home\\\" class=\\\"home-link\\\" (click)=\\\"menu.close()\\\">\\n        <span id=\\\"projectName\\\">{{projectName}}</span>\\n        <!-- <button mat-icon-button id=\\\"closeNavIcon\\\" (click)=\\\"menu.close()\\\">\\n                <mat-icon >close</mat-icon>\\n            </button> -->\\n      </div>\\n\\n      <div *ngIf=\\\"auth.getUser().role === 'admin'\\\">\\n        <a mat-list-item routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\" class=\\\"navLinks\\\" (click)=\\\"menu.close()\\\"> Dashboard </a>\\n      </div>\\n\\n      <a mat-list-item routerLink=\\\"/questions\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/questions\\\" class=\\\"navLinks\\\" (click)=\\\"menu.close()\\\">\\n        Questions </a>\\n\\n    </mat-nav-list>\\n    <hr>\\n  </mat-sidenav>\\n</mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/layout/layout.component.html\n// module id = ../../../../../src/app/components/layout/layout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { environment } from '../../../environments/environment';\nimport { Router, NavigationEnd, RouterStateSnapshot } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n// import { RouterState } from '@angular/router/src/router_state';\n\n\n@Component({\n  selector: 'layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  projectName = 'Expert spoon';\n  currentUrl;\n  state;\n  currentApp;\n  constructor(public auth: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n      // this.state = router.routerState:RouterState;\n      // router.events\n      //   .subscribe((event) => {\n      //     // console.log(event);\n      //     if (event instanceof NavigationEnd ) {\n      //       this.currentUrl = event.url;\n\n      //       if (event.url.match(/aquapro/g)){\n      //         this.projectName = 'Aqua-Pro';\n      //         this.currentApp = 'aquapro';\n      //         return;\n      //       }\n\n      //       if (event.url.match(/aquasmart/g)){\n      //         this.projectName = 'Aqua-Smart';\n      //         this.currentApp = 'aquasmart';\n      //         return;\n      //       }\n      //     }\n      // });\n   }\n\n  ngOnInit() {\n  }\n\n  logoutUser = () => {\n    this.auth.logout();\n    this.router.navigate(['']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/layout/layout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width {\\n  width: 100%;\\n}\\n\\n#loginContainer {\\n  display: table;\\n  width: 100%;\\n  margin: 0 auto;\\n  height: 100%;\\n}\\n\\n.alert {\\n  color: red;\\n}\\n\\n#loginForm,\\n#signUpForm {\\n  width: 350px;\\n  display: table-cell;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.formInputs {\\n  margin-top: 15px;\\n}\\n\\n.card-header {\\n  font-weight: bold;\\n  font-size: 125%;\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\\n#spinner {\\n  margin-left: 45%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div id=\\\"loginContainer\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <mat-card>\\n    <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n      <mat-card-title class=\\\"card-header\\\">\\n        Sign In\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form id=\\\"loginForm\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"formSubmit(loginForm)\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input [(ngModel)]=\\\"model.email\\\" #login_email=\\\"ngModel\\\" required name=\\\"email\\\" type=\\\"email\\\" matInput id=\\\"login_email\\\" placeholder=\\\"Email\\\"\\n            class=\\\"formInputs\\\">\\n\\n        </mat-form-field>\\n        <div id=\\\"loginEmailErrors\\\" *ngIf=\\\"login_email.touched && !login_email.valid\\\">\\n          <span *ngIf=\\\"login_email['errors']['required']\\\" class=\\\"alert\\\">\\n            Email is required\\n          </span>\\n        </div>\\n\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input [(ngModel)]=\\\"model.password\\\" #login_password=\\\"ngModel\\\" required name=\\\"password\\\" type=\\\"password\\\" matInput id=\\\"login_password\\\"\\n            placeholder=\\\"Password\\\" class=\\\"formInputs\\\">\\n        </mat-form-field>\\n        <div id=\\\"loginPasswordErrors\\\" *ngIf=\\\"login_password.touched && !login_password.valid\\\">\\n          <span *ngIf=\\\"login_password['errors']['required']\\\" class=\\\"alert\\\">\\n            Password is required\\n          </span>\\n        </div>\\n\\n\\n\\n\\n        <div *ngIf=\\\"showSpinner;else signinButton\\\">\\n          <mat-spinner id=\\\"spinner\\\" [diameter]=\\\"30\\\"></mat-spinner>\\n        </div>\\n\\n        <ng-template #signinButton>\\n          <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" mat-raised-button color='primary'>Sign In</button>\\n        </ng-template>\\n\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n  <br/>\\n  <span class=\\\"alert\\\" fxLayoutAlign=\\\"center\\\">{{invalidLogin}}</span>\\n  <br>\\n\\n</div>\\n\\n\\n<mat-spinner *ngIf=\\\"showSpinner\\\"></mat-spinner>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router, RouterStateSnapshot, ActivatedRoute } from \"@angular/router\";\n\nimport { NgForm } from \"@angular/forms\";\n\n@Component({\n  selector: \"login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  model = {\n    email: \"\",\n    password: \"\"\n  };\n  invalidLogin;\n  showSpinner = false;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    // authentication\n    if (auth.isLoggedIn()) {\n      router.navigate([\"/dashboard\"]);\n    }\n  }\n\n  ngOnInit() {}\n\n  formSubmit = f => {\n    console.log(f);\n    this.showSpinner = true;\n    if (f.valid) {\n      this.auth.login(f.value).subscribe(\n        response => {\n          if (response) {\n            const returnUrl = this.route.snapshot.queryParamMap.get(\n              \"returnUrl\"\n            );\n            //console.log(returnUrl);\n            this.router.navigate([returnUrl || \"/\"]);\n          } else this.invalidLogin = \"Invalid credentials\";\n          this.showSpinner = false;\n        },\n        (error: Response) => {\n          // console.log(error);\n          switch (error.status) {\n            case 401:\n              this.invalidLogin = \"Invalid credentials\";\n              break;\n            case 404:\n              this.invalidLogin = \"Something went wrong\";\n              break;\n            default:\n              this.invalidLogin = \"Something went wrong\";\n\n              this.showSpinner = false;\n          }\n        }\n      );\n    }\n    //console.log('entered');\n    //this.auth.login();\n    //this.router.navigate(['/dashboard']);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".section-card {\\n  max-width: 80%;\\n  margin: 30px;\\n  margin-left: 10%;\\n  background-color: #dcdcdc;\\n}\\n\\n.section-title {\\n  font-weight: bold;\\n}\\n\\n.radio-option {\\n  margin: 5px;\\n}\\n\\n.radio-submit {\\n  background-color: #3f51b5;\\n  color: white;\\n  margin-left: 50px;\\n}\\n\\n.error-card {\\n  max-width: 10%;\\n  margin: 30px;\\n  margin-left: 10%;\\n  background-color: #dcdcdc;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/questions/questions.component.css\n// module id = ../../../../../src/app/components/questions/questions.component.css\n// module chunks = main","module.exports = \"<div class=\\\"questionContainer\\\" fxLayout=\\\"column\\\">\\n\\n    <div *ngIf=\\\"errorMessage\\\">\\n        <mat-card class=\\\"error-card\\\" fxLayoutAlign=\\\"center center\\\">\\n            <mat-card-content class=\\\"section-title\\\">\\n                {{errorMessage}}\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n\\n    <mat-card class=\\\"section-card\\\" *ngFor=\\\"let section of sections;let i=index\\\">\\n\\n        <mat-card-header class=\\\"section-title\\\">\\n            <mat-card-title>{{section}}:</mat-card-title>\\n        </mat-card-header>\\n\\n        <mat-card-content>\\n            <mat-card class=\\\"question-card\\\" *ngFor=\\\"let question of questions[i]\\\">\\n\\n                <mat-card-header>\\n                    <mat-card-title>{{question.title}}</mat-card-title>\\n                </mat-card-header>\\n\\n                <mat-card-content>\\n                    <mat-radio-group #radio class=\\\"options\\\" fxLayout=\\\"column\\\" (change)=\\\"onChange($event,question,section)\\\">\\n                        <mat-radio-button class=\\\"radio-option\\\" *ngFor=\\\"let option of question.options\\\" [value]=\\\"option.option\\\">\\n                            {{option.option}}\\n                        </mat-radio-button>\\n                    </mat-radio-group>\\n                </mat-card-content>\\n\\n            </mat-card>\\n        </mat-card-content>\\n\\n        <mat-card-actions>\\n            <button mat-button class=\\\"radio-submit\\\" (click)=\\\"onSubmit(section)\\\">Submit</button>\\n        </mat-card-actions>\\n    </mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/questions/questions.component.html\n// module id = ../../../../../src/app/components/questions/questions.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { QuestionService } from \"../../services/question.service\";\nimport { AnswerService } from \"../../services/answer.service\";\n\n@Component({\n  selector: \"questions\",\n  templateUrl: \"./questions.component.html\",\n  styleUrls: [\"./questions.component.css\"]\n})\nexport class QuestionsComponent implements OnInit {\n  errorMessage;\n  sections = [];\n  questions = [];\n  answers = {};\n\n  constructor(\n    private questionService: QuestionService,\n    private answerService: AnswerService\n  ) {}\n\n  ngOnInit() {\n    this.questionService.getQuestions().subscribe(\n      response => {\n        //console.log(Object.keys(response.body).length);\n        if (\n          response.status === 200 &&\n          Object.keys(response.body).length !== 0\n        ) {\n          for (let section in response.body) {\n            this.sections.push(section);\n            this.questions.push(response.body[section]);\n            this.answers[section] = [];\n          }\n          console.log(this.questions);\n        } else {\n          this.errorMessage = \"Oops..Something went wrong!\";\n        }\n      },\n      error => {\n        console.log(error);\n        switch (error.status) {\n          case 404:\n            this.errorMessage = \"Questions not found\";\n            break;\n          default:\n            this.errorMessage = \"Oops..Something went wrong!\";\n        }\n      }\n    );\n  }\n\n  isAnswered(questionId, section) {\n    let i = 0;\n    let status = false;\n\n    for (let answer of this.answers[section]) {\n      if (answer.questionId === questionId) {\n        status = true;\n        break;\n      }\n      i++;\n    }\n    if (status) return i;\n    else return -1;\n  }\n\n  onChange(radioEvent, question, section) {\n    let choiceArray = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n    let choice: String;\n    let index = 0;\n\n    //loop to find the choice from the option value\n    for (let optionObject of question.options) {\n      if (optionObject.option === radioEvent.value) {\n        choice = choiceArray[index];\n        break;\n      }\n      index++;\n    }\n\n    //check to see if the question is already answered\n    let questionIndex = this.isAnswered(question.questionId, section);\n    if (questionIndex > -1) {\n      this.answers[section][questionIndex].choice = choice;\n    } else if (questionIndex === -1) {\n      this.answers[section].push({\n        questionId: question.questionId,\n        choice: choice\n        //revieweeId and reviewerId to be attached to the answer\n      });\n    }\n    //console.log(this.answers);\n  }\n\n  onSubmit(section) {\n    let sectionIndex = this.sections.indexOf(section);\n    let questionCount = this.questions[sectionIndex].length;\n    if (this.answers[section].length === questionCount) {\n      this.sendAnswers(this.answers[section]);\n    } else {\n      window.alert(\"Please answer all the questions before submitting\");\n    }\n  }\n\n  private sendAnswers(answers) {\n    this.answerService.postAnswers(answers);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/questions/questions.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width {\\n  width: 100%;\\n}\\n\\n#loginContainer {\\n  display: table;\\n  width: 100%;\\n  margin: 0 auto;\\n  height: 100%;\\n}\\n\\n.alert {\\n  color: red;\\n}\\n\\n#loginForm,\\n#signUpForm {\\n  width: 350px;\\n  display: table-cell;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.formInputs {\\n  margin-top: 15px;\\n}\\n\\n.card-header {\\n  font-weight: bold;\\n  font-size: 125%;\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\\n#spinner {\\n  margin-left: 45%;\\n}\\n\\n#success_login {\\n  background-color: #3f51b5;\\n  color: white;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/signup/signup.component.css\n// module id = ../../../../../src/app/components/signup/signup.component.css\n// module chunks = main","module.exports = \"<div id=\\\"loginContainer\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <div *ngIf=\\\"!signupSuccess; else signup_success \\\">\\n    <mat-card id=\\\"signup-card\\\">\\n\\n      <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n        <mat-card-title class=\\\"card-header\\\">Sign up</mat-card-title>\\n      </mat-card-header>\\n\\n      <mat-card-content>\\n\\n        <form id=\\\"signUpForm\\\" #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"formSubmit(signupForm)\\\">\\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input [(ngModel)]=\\\"model.name\\\" #signup_name=\\\"ngModel\\\" required name=\\\"signup_name\\\" type=\\\"email\\\" matInput id=\\\"signup_name\\\"\\n              placeholder=\\\"Enter your full name\\\" class=\\\"formInputs\\\">\\n          </mat-form-field>\\n\\n          <div id=\\\"signupEmailErrors\\\" *ngIf=\\\"signup_name.touched && !signup_name.valid\\\">\\n            <span *ngIf=\\\"signup_name['errors']['required']\\\" class=\\\"alert\\\">\\n              Name is required\\n            </span>\\n            <br/>\\n          </div>\\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input [(ngModel)]=\\\"model.email\\\" #signup_email=\\\"ngModel\\\" required name=\\\"signup_email\\\" type=\\\"email\\\" matInput id=\\\"signup_email\\\"\\n              placeholder=\\\"Enter your email address\\\" class=\\\"formInputs\\\">\\n          </mat-form-field>\\n\\n          <div id=\\\"signupEmailErrors\\\" *ngIf=\\\"signup_email.touched && !signup_email.valid\\\">\\n            <span *ngIf=\\\"signup_email['errors']['required']\\\" class=\\\"alert\\\">\\n              Email is required\\n            </span>\\n            <br/>\\n          </div>\\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input [(ngModel)]=\\\"model.username\\\" #signup_username=\\\"ngModel\\\" required name=\\\"signup_username\\\" type=\\\"username\\\" matInput id=\\\"signup_username\\\"\\n              placeholder=\\\"Choose a username\\\" class=\\\"formInputs\\\">\\n          </mat-form-field>\\n\\n          <div *ngIf=\\\"signup_username.touched && !signup_username.valid\\\">\\n            <span *ngIf=\\\"signup_username['errors']['required']\\\" class=\\\"alert\\\">\\n              Username is required\\n            </span>\\n            <br/>\\n          </div>\\n\\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input [(ngModel)]=\\\"model.password\\\" #signup_password=\\\"ngModel\\\" required name=\\\"signup_password\\\" type=\\\"password\\\" matInput id=\\\"signupPassword\\\"\\n              placeholder=\\\"Choose a password\\\" class=\\\"formInputs\\\">\\n          </mat-form-field>\\n\\n          <div *ngIf=\\\"signup_password.touched && !signup_password.valid\\\">\\n            <span *ngIf=\\\"signup_password['errors']['required']\\\" class=\\\"alert\\\">\\n              Password is required\\n            </span>\\n            <br/>\\n          </div>\\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input required ngModel #confirm_password=\\\"ngModel\\\" name=\\\"confirm_password\\\" type=\\\"password\\\" matInput id=\\\"confirmPassword\\\"\\n              placeholder=\\\"Confirm Password\\\" class=\\\"formInputs\\\">\\n          </mat-form-field>\\n\\n          <div *ngIf=\\\"confirm_password.touched && !confirm_password.valid\\\">\\n            <span *ngIf=\\\"confirm_password['errors']['required']\\\" class=\\\"alert\\\">\\n              Password is required\\n            </span>\\n            <br/>\\n          </div>\\n\\n          <div *ngIf=\\\"confirm_password.touched && confirm_password.valid\\\">\\n            <span *ngIf=\\\"!(confirm_password.value===signup_password.value)\\\" class=\\\"alert\\\">\\n              Passwords do not match\\n            </span>\\n            <br/>\\n          </div>\\n\\n          <div *ngIf=\\\"showSpinner;else signupButton\\\">\\n            <mat-spinner id=\\\"spinner\\\" [diameter]=\\\"30\\\"></mat-spinner>\\n          </div>\\n\\n          <ng-template #signupButton>\\n            <button type=\\\"submit\\\" [disabled]=\\\"!signupForm.valid\\\" mat-raised-button color='primary'>\\n              Sign Up\\n            </button>\\n          </ng-template>\\n\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n    <br>\\n    <span class=\\\"alert\\\" fxLayoutAlign=\\\"center\\\">{{signupError}}</span>\\n    <br>\\n  </div>\\n\\n  <ng-template #signup_success>\\n    <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"card-header\\\">\\n          Success!\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        You have been succesfully signed up..\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button id=\\\"success_login\\\" mat-button routerLink=\\\"/login\\\">Click here to login</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </ng-template>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/signup/signup.component.html\n// module id = ../../../../../src/app/components/signup/signup.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router, RouterStateSnapshot, ActivatedRoute } from \"@angular/router\";\n\nimport { NgForm } from \"@angular/forms\";\n\n@Component({\n  selector: \"signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit {\n  model = {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    role: \"admin\"\n  };\n  signupError;\n  signupSuccess = false;\n  showSpinner = false;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    /*this.signupSuccess = false;*/\n  }\n\n  formSubmit = f => {\n    //console.log(f);\n    this.showSpinner = true;\n    if (f.valid) {\n      this.auth.signup(this.model).subscribe(\n        response => {\n          if (response) {\n            this.signupSuccess = true;\n          } else this.signupError = \"Signup not succesful\";\n          this.showSpinner = false;\n        },\n        (error: Response) => {\n          // console.log(error);\n          switch (error.status) {\n            case 409:\n              this.signupError = \"Username already exists\";\n              break;\n            case 404:\n              this.signupError = \"Something went wrong\";\n              break;\n            default:\n              this.signupError = \"Something went wrong\";\n\n              this.showSpinner = false;\n          }\n        }\n      );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/components/signup/signup.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AnswerService {\n\n  constructor(private http:HttpClient) { }\n  postAnswers(answers){\n    \n    answers.forEach(answer =>{\n      let httpOptions = {\n        questionId: answer.questionId,\n        revieweeId: 'test-user',\n        choice: answer.choice,\n      }\n      \n      this.http.post('/api/answer',httpOptions).subscribe(response =>{\n        console.log('answer submitted');\n      });\n    })\n    //console.log(answers);\n    \n    \n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/services/answer.service.ts","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {CanActivate} from '@angular/router'; \n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authService: AuthService) { }\n\n\n  canActivate(route, state:RouterStateSnapshot){\n    if(this.authService.isLoggedIn())\n      return true;\n    \n    // this.router.navigate(['/login'], {queryParams: {returnUrl : state.url}});\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/services/auth-guard.service.ts","import { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport \"rxjs/add/operator/map\";\nimport { Observable } from \"rxjs/Observable\";\nimport \"rxjs/add/observable/throw\";\nimport \"rxjs/add/operator/catch\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable()\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  login = (credentials?) => {\n    const url = \"http://localhost:3000/api/login\";\n\n    return this.http.post(url, credentials).map(response => {\n      //console.log(response);\n      if (response && response[\"token\"]) {\n        //console.log(response[\"token\"]);\n        localStorage.setItem(\"survey-app-token\", response[\"token\"]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  signup = (credentials?) => {\n    const url = \"http://localhost:3000/api/signup\";\n\n    return this.http\n      .post(url, credentials, { observe: \"response\" })\n      .map(response => {\n        //console.log(response);\n        if (response.status === 200) {\n          return true;\n        } else return false;\n      });\n  };\n\n  logout = () => {\n    localStorage.removeItem(\"survey-app-token\");\n  };\n\n  isLoggedIn = () => {\n    const access_token = localStorage.getItem(\"survey-app-token\");\n\n    if (!access_token) {\n      return false;\n    }\n\n    // let tokenExpData = jwtHelper.getTokenExpirationDate(access_token),\n    //     isExpired = jwtHelper.isTokenExpired(access_token);\n\n    // console.log('date ', tokenExpData);\n    // console.log('isexpired ', isExpired);\n\n    return true;\n  };\n\n  getToken = () => {\n    if (this.isLoggedIn()) {\n      return localStorage.getItem(\"access_token\");\n    }\n    return \"\";\n  };\n\n  getUser() {\n    const token = localStorage.getItem(\"survey-app-token\");\n    if (!token) {\n      return false;\n    } else {\n      const decodedToken = new JwtHelperService().decodeToken(token);\n      //console.log(decodedToken);\n      return decodedToken;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/services/auth.service.ts","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class QuestionService {\n  constructor(private http: HttpClient) {}\n\n  getQuestions() {\n    return this.http.get(\"http://localhost:3000/api/question/asdf/\", {\n      observe: \"response\"\n    });\n  }\n\n  uploadQuestions(httpOptions) {\n    return this.http.post(\"/api/upload\", httpOptions, { observe: \"response\" });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/app/services/question.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  // server : 'http://localhost:3000/api',\n  projectName : 'survey-app'\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/bhaskar/bra/expert-spoon/ui/src/main.ts"],"sourceRoot":"webpack:///"}