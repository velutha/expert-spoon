{"version":3,"sources":["/Users/amith/workspace/expert-spoon/ui/src/$_lazy_route_resource lazy","/Users/amith/workspace/expert-spoon/ui/src/app/app.component.css","/Users/amith/workspace/expert-spoon/ui/src/app/app.component.html","/Users/amith/workspace/expert-spoon/ui/src/app/app.component.ts","/Users/amith/workspace/expert-spoon/ui/src/app/app.module.ts","/Users/amith/workspace/expert-spoon/ui/src/app/components/dashboard/dashboard.component.css","/Users/amith/workspace/expert-spoon/ui/src/app/components/dashboard/dashboard.component.html","/Users/amith/workspace/expert-spoon/ui/src/app/components/dashboard/dashboard.component.ts","/Users/amith/workspace/expert-spoon/ui/src/app/components/layout/layout.component.css","/Users/amith/workspace/expert-spoon/ui/src/app/components/layout/layout.component.html","/Users/amith/workspace/expert-spoon/ui/src/app/components/layout/layout.component.ts","/Users/amith/workspace/expert-spoon/ui/src/app/components/login/login.component.css","/Users/amith/workspace/expert-spoon/ui/src/app/components/login/login.component.html","/Users/amith/workspace/expert-spoon/ui/src/app/components/login/login.component.ts","/Users/amith/workspace/expert-spoon/ui/src/app/home/home.component.css","/Users/amith/workspace/expert-spoon/ui/src/app/home/home.component.html","/Users/amith/workspace/expert-spoon/ui/src/app/home/home.component.ts","/Users/amith/workspace/expert-spoon/ui/src/app/questions/questions.component.css","/Users/amith/workspace/expert-spoon/ui/src/app/questions/questions.component.html","/Users/amith/workspace/expert-spoon/ui/src/app/questions/questions.component.ts","/Users/amith/workspace/expert-spoon/ui/src/app/services/answer.service.ts","/Users/amith/workspace/expert-spoon/ui/src/app/services/auth-guard.service.ts","/Users/amith/workspace/expert-spoon/ui/src/app/services/auth.service.ts","/Users/amith/workspace/expert-spoon/ui/src/app/services/question.service.ts","/Users/amith/workspace/expert-spoon/ui/src/environments/environment.ts","/Users/amith/workspace/expert-spoon/ui/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wC;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACQ;AACC;AAIuB;AACrB;AAExD,WAAW;AACyC;AACI;AACI;AACJ;AAExD,6BAA6B;AAC8B;AACA;AACN;AACA;AACI;AACK;AACT;AACQ;AACJ;AACO;AACD;AACR;AACqB;AACvB;AACA;AACE;AAEvD,aAAa;AACkC;AACwB;AACH;AACY;AACX;AACf;AAEtD,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4EAAa,EAAE;IACtC,EAAE,IAAI,EAAE,OAAO,EAAC,SAAS,EAAE,0FAAc,EAAE,SAAS,EAAE,MAAM,EAAG;IAC/D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sGAAkB,EAAC;IACnD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAkB,EAAC;CACpD,CAAC;AAuCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QApCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAY;gBACZ,6FAAe;gBACf,0FAAc;gBACd,sGAAkB;gBAClB,2FAAkB;gBAClB,4EAAa;aACd;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,qGAAuB;gBACvB,mEAAW;gBACX,8EAAgB;gBAChB,8EAAgB;gBAChB,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,oFAAgB;gBAChB,oFAAgB;gBAChB,8EAAa;gBACb,8EAAa;gBACb,kFAAe;gBACf,uFAAiB;gBACjB,8EAAa;gBACb,sFAAiB;gBACjB,kFAAe;gBACf,yFAAkB;gBAClB,wFAAkB;gBAClB,gFAAc;gBACd,qGAAwB;gBACxB,8EAAa;gBACb,8EAAa;gBACb,gFAAc;aACf;YACD,SAAS,EAAE,CAAC,2EAAW,EAAE,+EAAS,EAAE,mFAAe,EAAE,gFAAa,CAAC;YACnE,SAAS,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;ACvFtB;AACA;;;AAGA;AACA,sCAAuC,qBAAqB,mBAAmB,OAAO,mBAAmB,gCAAgC,mBAAmB,GAAG,0BAA0B,oBAAoB,GAAG,wBAAwB,6BAA6B,4BAA4B,sBAAsB,GAAG;;AAE1T;;;AAGA;AACA,2C;;;;;;;ACXA,u3C;;;;;;;;;;;;;;;;;;;;ACAkD;AACgB;AAOlE;IAME,4BAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAI,CAAC;IAEjD,qCAAQ,GAAR;QACE,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACtD,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAE/D,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAC;YACnC,SAAS,CAAC,KAAK,EAAE,CAAC;YAClB,yBAAyB;QAC3B,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAC,UAAC,KAAK;YACxC,WAAW,CAAC,SAAS,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAC1F,kCAAkC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAU,GAAV;QAAA,iBAmBC;QAlBC,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAqB,CAAC;QACzE,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAExB,IAAI,WAAW,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAE3C,IAAI,MAAM,GAAG,IAAI,UAAU,EAAS,CAAC;YACrC,MAAM,CAAC,MAAM,GAAG,UAAU,KAAK;gBAC7B,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC;YACF,MAAM,CAAC,OAAO,GAAG,UAAU,KAAK;gBAC9B,MAAM,CAAC,KAAK,CAAC,CAAC;gBACd,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAChC,CAAC,CAAC;YAEF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAM;YACV,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE,IAAI,CAAC,YAAY;YACxB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACtC,yDAAyD;IAC3D,CAAC;IApDU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAO6B,mFAAe;OANjC,kBAAkB,CAsD9B;IAAD,yBAAC;CAAA;AAtD8B;;;;;;;;ACR/B;AACA;;;AAGA;AACA,uCAAwC,kBAAkB,KAAK,kBAAkB,qBAAqB,KAAK,oBAAoB,mBAAmB,yBAAyB,0BAA0B,KAAK,8BAA8B,iCAAiC,4BAA4B,sBAAsB,KAAK,gBAAgB,oBAAoB,GAAG,cAAc,wBAAwB,GAAG;;AAEhZ;;;AAGA;AACA,2C;;;;;;;ACXA,wkBAAwkB,aAAa,k+BAAk+B,aAAa,koB;;;;;;;;;;;;;;;;;;;;;ACAlhD;AACQ;AAEmB;AAC5B;AACjD,kEAAkE;AAQlE;IAME,yBAAmB,IAAiB,EAC1B,KAAqB,EACrB,MAAc;QACpB,+CAA+C;QAC/C,gBAAgB;QAChB,4BAA4B;QAC5B,6BAA6B;QAC7B,6CAA6C;QAC7C,qCAAqC;QARzC,iBAuBE;QAvBiB,SAAI,GAAJ,IAAI,CAAa;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QANxB,gBAAW,GAAG,cAAc,CAAC;QAgC7B,eAAU,GAAG;YACX,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;QArBG,0CAA0C;QAC1C,yCAAyC;QACzC,uCAAuC;QACvC,kBAAkB;QAClB,UAAU;QAEV,4CAA4C;QAC5C,2CAA2C;QAC3C,yCAAyC;QACzC,kBAAkB;QAClB,UAAU;QACV,QAAQ;QACR,MAAM;IACT,CAAC;IAEF,kCAAQ,GAAR;IACA,CAAC;IAhCU,eAAe;QAL3B,wEAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;;;SAGnB,CAAC;yCAOyB,2EAAW;YACnB,uEAAc;YACb,+DAAM;OARb,eAAe,CAuC3B;IAAD,sBAAC;CAAA;AAvC2B;;;;;;;;ACb5B;AACA;;;AAGA;AACA,qCAAsC,kBAAkB,GAAG,oBAAoB,qBAAqB,kBAAkB,qBAAqB,mBAAmB,GAAG,WAAW,iBAAiB,GAAG,4BAA4B,mBAAmB,0BAA0B,yBAAyB,6BAA6B,GAAG,gBAAgB,uBAAuB,GAAG;;AAE5W;;;AAGA;AACA,2C;;;;;;;ACXA,mpDAAmpD,cAAc,8sDAA8sD,eAAe,yQ;;;;;;;;;;;;;;;;;;;;;ACA50G;AAEQ;AACoB;AAS9E;IASE,wBACU,IAAiB,EACjB,MAAc,EACd,KAAoB;QAH9B,iBAQC;QAPS,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAe;QAV9B,UAAK,GAAG;YACN,KAAK,EAAE,EAAE;YACT,QAAQ,EAAG,EAAE;SACd,CAAC;QAEF,gBAAW,GAAC,KAAK,CAAC;QAelB,eAAU,GAAE,UAAC,CAAC;YACZ,2BAA2B;YAC3B,gBAAgB;YAChB,6BAA6B;YAC7B,kBAAkB;YAClB,sBAAsB;YACtB,yBAAyB;YACzB,kFAAkF;YAClF,+DAA+D;YAC/D,YAAY;YACZ,eAAe;YACf,uDAAuD;YAEvD,oCAAoC;YACpC,WAAW;YACX,+BAA+B;YAC/B,iCAAiC;YACjC,iCAAiC;YACjC,sBAAsB;YACtB,yDAAyD;YACzD,qBAAqB;YACrB,sBAAsB;YACtB,0DAA0D;YAC1D,qBAAqB;YACrB,qBAAqB;YACrB,0DAA0D;YAC1D,YAAY;YAEZ,oCAAoC;YACpC,UAAU;YACV,SAAS;YACT,IAAI;YACR,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAEvC,CAAC;QA7CC,iBAAiB;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IApBU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,OAAO;;;SAGlB,CAAC;yCAWgB,2EAAW;YACT,+DAAM;YACR,uEAAc;OAZnB,cAAc,CA2D1B;IAAD,qBAAC;CAAA;AA3D0B;;;;;;;;ACZ3B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6C;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;ACP1B;AACA;;;AAGA;AACA,uCAAwC,qBAAqB,mBAAmB,kCAAkC,mBAAmB,uBAAuB,GAAG,kBAAkB,oBAAoB,mBAAmB,gCAAgC,mBAAmB,0BAA0B;;AAErS;;;AAGA;AACA,2C;;;;;;;ACXA,+IAA+I,2FAA2F,SAAS,6NAA6N,gBAAgB,ucAAuc,eAAe,2T;;;;;;;;;;;;;;;;;;;;;ACAp4B;AACa;AACJ;AAO3D;IAOE,4BAAoB,eAAgC,EAAU,aAA4B;QAAtE,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAJ1F,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAE,EAAE,CAAC;IAGX,CAAC;IAAA,CAAC;IAGH,qCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACpD,GAAG,EAAC,IAAI,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAC7B,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,6BAA6B;YAC7B,8BAA8B;YAC9B,4BAA4B;QAC9B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAEF,CAAC;IAEF,CAAC;IAED,uCAAU,GAAV,UAAW,UAAU,EAAC,OAAO;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,GAAG,EAAe,UAAqB,EAArB,SAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAArB,cAAqB,EAArB,IAAqB;YAAnC,IAAI,MAAM;YACZ,EAAE,EAAC,MAAM,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;gBACpC,MAAM,GAAG,IAAI,CAAC;gBACd,KAAK,CAAC;YACR,CAAC;YACD,CAAC,EAAE,CAAC;SACL;QACD,EAAE,EAAC,MAAM,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC;QAAC,IAAI;YAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,qCAAQ,GAAR,UAAS,UAAU,EAAE,QAAQ,EAAE,OAAO;QAEpC,IAAI,WAAW,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;QACxC,IAAI,MAAc,CAAC;QACnB,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,+CAA+C;QAC/C,GAAG,EAAqB,UAAgB,EAAhB,aAAQ,CAAC,OAAO,EAAhB,cAAgB,EAAhB,IAAgB;YAApC,IAAI,YAAY;YAClB,EAAE,EAAC,YAAY,CAAC,MAAM,KAAK,UAAU,CAAC,KAAK,CAAC,EAAC;gBAC3C,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC5B,KAAK,CAAC;YACR,CAAC;YACD,KAAK,EAAE,CAAC;SACT;QAED,kDAAkD;QAClD,IAAI,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAC,OAAO,CAAC,CAAC;QACjE,EAAE,EAAC,aAAa,GAAC,CAAC,CAAC,CAAC,EAAC;YACnB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,aAAa,KAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;gBACzB,UAAU,EAAE,QAAQ,CAAC,UAAU;gBAC/B,MAAM,EAAE,MAAM;aAEf,CAAC;QACJ,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,qCAAQ,GAAR,UAAS,OAAO;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGS,wCAAW,GAAnB,UAAoB,OAAO;QACvB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAjFQ,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQqC,mFAAe,EAAyB,+EAAa;OAP/E,kBAAkB,CAkF9B;IAAD,yBAAC;CAAA;AAlF8B;;;;;;;;;;;;;;;;;;;;;ACTY;AACO;AAGlD;IAEE,uBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IACxC,mCAAW,GAAX,UAAY,OAAO;QAAnB,iBAgBD;QAdG,OAAO,CAAC,OAAO,CAAC,gBAAM;YACpB,IAAI,WAAW,GAAG;gBAChB,UAAU,EAAE,MAAM,CAAC,UAAU;gBAC7B,UAAU,EAAE,WAAW;gBACvB,MAAM,EAAE,MAAM,CAAC,MAAM;aACtB;YAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBAC1D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAGzB,CAAC;IAnBY,aAAa;QADzB,yEAAU,EAAE;yCAGc,wEAAU;OAFxB,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArByB;;;;;;;;;;;;;;;;;;;;;;ACJiB;AACE;AACyC;AAItF;IAEE,mBACU,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAGvC,+BAAW,GAAX,UAAY,KAAK,EAAE,KAAyB;QAC1C,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC;QAEd,4EAA4E;QAC5E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAbU,SAAS;QADrB,yEAAU,EAAE;yCAIO,+DAAM;YACD,kEAAW;OAJvB,SAAS,CAcrB;IAAD,gBAAC;CAAA;AAdqB;;;;;;;;;;;;;;;;;;;;;;;;ACNqB;AAEoB;AAChC;AAEI;AACF;AACjC,8CAA8C;AAG9C;IAEE,qBAAoB,IAAgB;QAApC,iBAAyC;QAArB,SAAI,GAAJ,IAAI,CAAY;QAEpC,UAAK,GAAG,UAAC,WAAY;YACnB,IAAM,GAAG,GAAG,iCAAiC,CAAC;YAE9C,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC;iBACnC,GAAG,CACF,kBAAQ;gBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACvB;;;;;;+BAMe;YACjB,CAAC,CAAC,CAAC;QACV,CAAC;QAED,WAAM,GAAG;YACP,YAAY,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAC9C,CAAC;QAED,eAAU,GAAI;YACZ,IAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAE9D,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAGD,qEAAqE;YACrE,0DAA0D;YAE1D,sCAAsC;YACtC,wCAAwC;YAExC,MAAM,CAAC,IAAI,CAAC;QAEd,CAAC;QAED,aAAQ,GAAG;YACT,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC9C,CAAC;YACD,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IA9CuC,CAAC;IAF9B,WAAW;QADvB,yEAAU,EAAE;yCAGe,wEAAU;OAFzB,WAAW,CAkDvB;IAAD,kBAAC;CAAA;AAlDuB;;;;;;;;;;;;;;;;;;;;;ACVmB;AACO;AAGlD;IAEE,yBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAExC,sCAAY,GAAZ;QACA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAC5C,CAAC;IAED,yCAAe,GAAf,UAAgB,WAAW;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACxD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAZU,eAAe;QAD3B,yEAAU,EAAE;yCAGc,wEAAU;OAFxB,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;ACJ5B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,wCAAwC;IACxC,WAAW,EAAG,YAAY;CAC3B,CAAC;;;;;;;;;;;;;;ACT6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\n\\n<layout></layout>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { environment } from '../environments/environment';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// services\nimport {AuthService} from './services/auth.service';\nimport {AuthGuard} from './services/auth-guard.service';\nimport {QuestionService} from './services/question.service';\nimport {AnswerService} from './services/answer.service';\n\n// angular material compnents\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatRadioModule} from '@angular/material/radio';\n\n// components\nimport { AppComponent } from './app.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { HomeComponent } from './home/home.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login',component: LoginComponent, pathMatch: 'full'  },\n  { path: 'dashboard', component: DashboardComponent},\n  { path: 'questions', component: QuestionsComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    LoginComponent,\n    DashboardComponent,\n    QuestionsComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatTabsModule,\n    MatRadioModule\n  ],\n  providers: [AuthService, AuthGuard, QuestionService, AnswerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".file-upload{\\n    max-width: 50%;\\n    margin: 20px;    \\n}\\n\\n.upload-button{\\n    background-color: #3f51b5;\\n    color: white;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n    display: none;\\n}\\n\\n#custom-file-input {\\n    border: 1px solid #ccc;\\n    display: inline-block;\\n    cursor: pointer;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"upload-container\\\">\\n    <mat-card class=\\\"file-upload\\\">\\n        <mat-card-header class=\\\"file-upload-header\\\">\\n            <mat-card-title>Upload questions</mat-card-title>\\n        </mat-card-header>\\n    \\n        <mat-card-content class=\\\"file-upload-content\\\" >\\n            <div class=\\\"upload-form\\\" fxLayout=\\\"column\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Enterprise Id\\\" [(ngModel)]=\\\"enterpriseId\\\">\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Filename\\\" [(ngModel)]=\\\"fileName\\\">\\n                    <mat-hint align=\\\"end\\\">Name of the file to be uploaded</mat-hint>\\n                </mat-form-field>\\n                \\n                <div >\\n                    <button id=\\\"custom-file-input\\\"mat-button class=\\\"upload-button\\\">\\n                        Choose file\\n                    </button>\\n                    <input id=\\\"file-input\\\" name=\\\"myFile\\\" type=\\\"file\\\" (change)=\\\"encodeFile()\\\">\\n                </div>\\n                \\n                \\n                \\n            </div>\\n        </mat-card-content>\\n        \\n        <mat-card-actions>\\n            <button class=\\\"upload-button\\\" mat-button (click)=\\\"onUpload()\\\">Upload</button>\\n          </mat-card-actions>\\n    \\n    </mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../../services/question.service';\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  enterpriseId;\n  fileName;\n  data;\n\n  constructor(private service: QuestionService) { }\n\n  ngOnInit() {\n    let fileInput = document.getElementById('file-input');\n    let customInput = document.getElementById('custom-file-input');\n\n    customInput.addEventListener('click',()=>{\n      fileInput.click();\n      //console.log(fileInput);\n    });\n\n    fileInput.addEventListener('change',(event) =>{\n      customInput.innerText = (event.target as HTMLInputElement).value.replace(/^.*[\\\\\\/]/, '');\n      //console.log(event.target.value);\n    });\n  }\n  encodeFile(){\n    let doc = document.querySelector('input[type=file]') as HTMLInputElement;\n    let file = doc.files[0];\n    \n    let dataPromise = new Promise((resolve,reject) =>{\n\n      let reader = new FileReader() as any;\n      reader.onload = function (event) {\n        resolve(reader.result.split(',')[1]);\n      };\n      reader.onerror = function (error) {\n        reject(error);\n        console.log('Error: ', error);\n      };\n  \n      reader.readAsDataURL(file);\n    }).then(base64 =>{\n        this.data = base64;\n    })        \n  }\n\n  onUpload() {\n    let options = {\n      entId: this.enterpriseId,\n      data: this.data,\n      fileName: this.fileName\n    }\n\n    this.service.uploadQuestions(options);\n    //console.log(this.enterpriseId,this.fileName,this.data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#closeNavIcon{\\n    float:right;\\n  }\\n\\n  /* #sideNav{\\n    color: #8C7272;\\n  } */\\n\\n  #navHeader{\\n    height: 40px;\\n    padding-left: 10px;\\n    margin-bottom: 20px;\\n  }\\n\\n  #navHeader #projectName{\\n    margin: 10px 10px 10px 5px;\\n    display: inline-block;\\n    font-size: 20px;\\n  }\\n\\n  .navLinks{\\n  font-size: 14px;\\n}\\n\\n  .active{\\n  background: #F5F5F5;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/layout/layout.component.css\n// module id = ../../../../../src/app/components/layout/layout.component.css\n// module chunks = main","module.exports = \"\\n<!--*ngIf=\\\"auth.isLoggedIn()\\\"-->\\n<mat-sidenav-container layout=\\\"row\\\" fullscreen>\\n    <div \\n      class=\\\"container\\\" id=\\\"header\\\"\\n      fxLayout\\n      fxLayoutAlign=\\\"center\\\"\\n      fxLayoutGap=\\\"10px\\\"\\n      fxLayoutGap.xs=\\\"0\\\">\\n    \\n      <mat-toolbar role=\\\"header\\\" color=\\\"primary\\\">\\n\\n        <div class=\\\"text-left\\\" fxFlex=\\\"15%\\\">\\n          <button mat-icon-button (click)=\\\"menu.open()\\\">\\n            <mat-icon >menu</mat-icon>\\n          </button>   \\n        </div>\\n\\n        <div  fxFlex=\\\"70%\\\"  >\\n          <span id=\\\"place\\\" >{{projectName}}</span>\\n        </div>\\n\\n        <div fxFlex=\\\"15%\\\">\\n          <div *ngIf=\\\"auth.isLoggedIn()\\\" else notLoggedIn>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"userMenu\\\">\\n                  <mat-icon >person</mat-icon>\\n                </button>\\n          </div>\\n          <ng-template #notLoggedIn>\\n            <div>\\n                <span>Login</span>\\n            </div>\\n          </ng-template>  \\n        </div>\\n        \\n      </mat-toolbar>   \\n    </div>\\n\\n    <div>\\n      <mat-menu #userMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item (click)=\\\"logoutUser()\\\" >\\n          <span>Logout</span>\\n        </button>         \\n      </mat-menu>  \\n    </div>\\n\\n    \\n  \\n    <router-outlet></router-outlet>\\n    <!-- <login></login> -->\\n    <!-- Routed views go here -->\\n\\n\\n    <mat-sidenav id=\\\"sideNav\\\" color=\\\"primary\\\" #menu>\\n      <mat-nav-list >\\n        <!-- <div id=\\\"navHeader\\\">\\n            <span id=\\\"projectName\\\">{{projectName}}</span>\\n            <button mat-icon-button id=\\\"closeNavIcon\\\" (click)=\\\"menu.close()\\\">\\n                <mat-icon >close</mat-icon>\\n            </button>\\n        </div> -->\\n          \\n          <a mat-list-item \\n            routerLink=\\\"/dashboard\\\"\\n            routerLinkActive=\\\"active\\\" \\n            class=\\\"navLinks\\\" (click)=\\\"menu.close()\\\"> Dashboard </a>\\n          <a mat-list-item routerLink=\\\"aquapro/geoSpatial\\\" \\n            routerLinkActive=\\\"active\\\" class=\\\"navLinks\\\" \\n            (click)=\\\"menu.close()\\\" > Questions </a>\\n\\n      </mat-nav-list>\\n      <hr>\\n    </mat-sidenav>\\n  </mat-sidenav-container>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/layout/layout.component.html\n// module id = ../../../../../src/app/components/layout/layout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { environment } from '../../../environments/environment';\nimport { Router, NavigationEnd, RouterStateSnapshot } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n// import { RouterState } from '@angular/router/src/router_state';\n\n\n@Component({\n  selector: 'layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  projectName = 'Expert spoon';\n  currentUrl;\n  state;\n  currentApp;\n  constructor(public auth: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n      // this.state = router.routerState:RouterState;\n      // router.events\n      //   .subscribe((event) => {\n      //     // console.log(event);\n      //     if (event instanceof NavigationEnd ) {\n      //       this.currentUrl = event.url;\n\n      //       if (event.url.match(/aquapro/g)){\n      //         this.projectName = 'Aqua-Pro';\n      //         this.currentApp = 'aquapro';\n      //         return;\n      //       }\n\n      //       if (event.url.match(/aquasmart/g)){\n      //         this.projectName = 'Aqua-Smart';\n      //         this.currentApp = 'aquasmart';\n      //         return;\n      //       }\n      //     }\n      // });\n   }\n\n  ngOnInit() {\n  }\n\n  logoutUser = () => {\n    this.auth.logout();\n    this.router.navigate(['']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/layout/layout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width{\\n    width: 100%;\\n}\\n\\n#loginContainer{\\n    display: table;\\n    width: 100%;\\n    margin: 0 auto;\\n    height: 100%;\\n}\\n\\n.alert{\\n    color: red;\\n}\\n\\n#loginForm, #signUpForm{\\n    width: 350px;\\n    display: table-cell;\\n    text-align: center;\\n    vertical-align: middle;\\n}\\n\\n.formInputs{\\n    margin-top: 15px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div id=\\\"loginContainer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <mat-tab-group class=\\\"demo-tab-group\\\">\\n    <mat-tab label=\\\"Sign In\\\">\\n  \\n      <form  id=\\\"loginForm\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"formSubmit(loginForm)\\\">\\n          <mat-form-field class=\\\"full-width\\\" >\\n            <input \\n              [(ngModel)]=\\\"model.email\\\" \\n              #login_email=\\\"ngModel\\\" \\n              required \\n              name=\\\"login_email\\\" \\n              type=\\\"email\\\" \\n              matInput  \\n              id=\\\"login_email\\\"\\n              placeholder=\\\"Email\\\"\\n              class=\\\"formInputs\\\">\\n            \\n          </mat-form-field>\\n          <div id=\\\"loginEmailErrors\\\" *ngIf=\\\"login_email.touched && !login_email.valid\\\">\\n            <span *ngIf=\\\"login_email['errors']['required']\\\"  class=\\\"alert\\\">\\n                Email is required\\n            </span>\\n          </div>\\n          \\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input  \\n              [(ngModel)]=\\\"model.password\\\" \\n              #login_password=\\\"ngModel\\\"\\n              required \\n              name=\\\"password\\\" \\n              type=\\\"password\\\" \\n              matInput       \\n              id=\\\"login_password\\\"\\n              placeholder=\\\"Password\\\"\\n              class=\\\"formInputs\\\">\\n          </mat-form-field>\\n          <div id=\\\"loginPasswordErrors\\\" *ngIf=\\\"login_password.touched && !login_password.valid\\\">\\n            <span *ngIf=\\\"login_password['errors']['required']\\\"  class=\\\"alert\\\">\\n                Password is required\\n            </span>\\n          </div>\\n          <span class=\\\"alert\\\">{{invalidLogin}}</span> <br>\\n          <button type=\\\"submit\\\"\\n            [disabled]=\\\"!loginForm.valid\\\" mat-raised-button color='primary'>Sign In</button>\\n      </form>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Sign Up\\\">\\n      <form  id=\\\"signUpForm\\\" #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"formSubmit(signupForm)\\\">\\n          <mat-form-field class=\\\"full-width\\\" >\\n            <input \\n              [(ngModel)]=\\\"model.email\\\" \\n              #signup_email=\\\"ngModel\\\" \\n              required \\n              name=\\\"signup_email\\\" \\n              type=\\\"email\\\" \\n              matInput  \\n              id=\\\"signup_email\\\"\\n              placeholder=\\\"Email\\\"\\n              class=\\\"formInputs\\\">\\n            \\n          </mat-form-field>\\n          <div id=\\\"signupEmailErrors\\\" *ngIf=\\\"signup_email.touched && !signup_email.valid\\\">\\n            <span *ngIf=\\\"signup_email['errors']['required']\\\"  class=\\\"alert\\\">\\n                Email is required\\n            </span>\\n          </div>\\n          \\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input  \\n              [(ngModel)]=\\\"model.password\\\" \\n              #signup_password=\\\"ngModel\\\"\\n              required \\n              name=\\\"signup_password\\\" \\n              type=\\\"password\\\" \\n              matInput       \\n              id=\\\"signupPassword\\\"\\n              placeholder=\\\"Password\\\"\\n              class=\\\"formInputs\\\">\\n          </mat-form-field>\\n          <div id=\\\"signupPasswordErrors\\\" *ngIf=\\\"signup_password.touched && !signup_password.valid\\\">\\n            <span *ngIf=\\\"signup_password['errors']['required']\\\"  class=\\\"alert\\\">\\n                Password is required\\n            </span>\\n          </div>\\n          <!-- <span class=\\\"alert\\\">{{invalidSignup}}</span> <br> -->\\n          <button type=\\\"submit\\\"\\n            [disabled]=\\\"!signupForm.valid\\\" mat-raised-button color='primary'>Sign Up</button>\\n      </form>\\n    </mat-tab>\\n  </mat-tab-group>\\n\\n</div>\\n\\n\\n<mat-spinner *ngIf=\\\"showSpinner\\\"></mat-spinner>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\n\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model = {\n    email: '',\n    password : ''\n  };\n  invalidLogin;\n  showSpinner=false;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route:ActivatedRoute){\n    // authentication\n    if (auth.isLoggedIn()) {\n      router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  formSubmit= (f) => {\n    // this.showSpinner = true;\n    // if (f.valid){\n    //   this.auth.login(f.value)\n    //     .subscribe(\n    //       response => {\n    //         if (response){\n    //           const returnUrl = this.route.snapshot.queryParamMap.get('returnUrl');\n    //           this.router.navigate([returnUrl || '../landing']);\n    //         }\n    //         else\n    //           this.invalidLogin = 'Invalid credentials';\n\n    //         this.showSpinner = false;\n    //       },\n    //       (error: Response) => {\n    //         // console.log(error);\n    //         switch (error.status){\n    //           case 401:\n    //             this.invalidLogin = 'Invalid credentials';\n    //             break;\n    //           case 404:\n    //             this.invalidLogin = 'Something went wrong';\n    //             break;\n    //           default:\n    //             this.invalidLogin = 'Something went wrong';\n    //         }\n\n    //         this.showSpinner = false;\n    //       }\n    //     );\n    // }\nconsole.log('entered');\nthis.auth.login();\n    this.router.navigate(['/dashboard']);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<p>\\n  home works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".section-card{\\n    max-width: 80%;\\n    margin: 20px;\\n    background-color: #DCDCDC\\n}\\n\\n.section-title{\\n    font-size: 100px;\\n}\\n\\n.radio-option{\\n    margin: 5px\\n}\\n\\n.radio-submit {\\n    background-color: #3f51b5;\\n    color: white;\\n    margin-left: 50px\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/questions/questions.component.css\n// module id = ../../../../../src/app/questions/questions.component.css\n// module chunks = main","module.exports = \"<div class=\\\"questionContainer\\\" fxLayout=\\\"column\\\">\\n  <mat-card class=\\\"section-card\\\" *ngFor = \\\"let section of sections;let i=index\\\">\\n\\n    <mat-card-header class=\\\"section-title\\\">\\n        <mat-card-title>{{section}}:</mat-card-title>\\n    </mat-card-header>\\n    \\n    <mat-card-content>\\n      <mat-card class=\\\"question-card\\\" *ngFor = \\\"let question of questions[i]\\\">\\n\\n          <mat-card-header>\\n              <mat-card-title>{{question.title}}</mat-card-title>\\n          </mat-card-header>\\n\\n          <mat-card-content>\\n              <mat-radio-group \\n                  #radio\\n                  class=\\\"options\\\" \\n                  fxLayout=\\\"column\\\"\\n                  (change) = \\\"onChange($event,question,section)\\\"\\n                >\\n                <mat-radio-button class=\\\"radio-option\\\" *ngFor = \\\"let option of question.options\\\" [value]=\\\"option.option\\\">\\n                    {{option.option}}\\n                </mat-radio-button>\\n              </mat-radio-group>\\n          </mat-card-content>\\n\\n      </mat-card>\\n    </mat-card-content>\\n\\n    <mat-card-actions >\\n        <button mat-button class=\\\"radio-submit\\\" (click)=\\\"onSubmit(section)\\\">Submit</button>\\n      </mat-card-actions>\\n  </mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amith/workspace/expert-spoon/ui/src/app/questions/questions.component.html\n// module id = ../../../../../src/app/questions/questions.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\n\n@Component({\n  selector: 'questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  \n  response;\n  sections = [];\n  questions = [];\n  answers ={};\n\n  constructor(private questionService: QuestionService, private answerService: AnswerService) {\n   }; \n  \n\n  ngOnInit (){\n    this.questionService.getQuestions().subscribe(response =>{\n      for(let section in response) {\n        this.sections.push(section);\n        this.questions.push(response[section]);\n        this.answers[section] = [];\n      }\n      console.log(response);\n      //console.log(this.sections);\n      //console.log(this.questions);\n      //console.log(this.answers);\n    },\n    error => {\n      console.log(error);\n    }\n    \n  );\n    \n  }\n\n  isAnswered(questionId,section){\n    let i = 0;\n    let status = false;\n\n    for(let answer of this.answers[section]) {  \n      if(answer.questionId === questionId) {\n        status = true;\n        break;\n      }\n      i++;\n    }\n    if(status) return i; else return -1;\n  }\n\n  onChange(radioEvent, question, section) {\n\n    let choiceArray = ['a','b','c','d','e'];\n    let choice: String;\n    let index = 0;\n\n    //loop to find the choice from the option value\n    for(let optionObject of question.options){\n      if(optionObject.option === radioEvent.value){\n        choice = choiceArray[index];\n        break;\n      }\n      index++;\n    }\n\n    //check to see if the question is already answered\n    let questionIndex = this.isAnswered(question.questionId,section);\n    if(questionIndex>-1){\n      this.answers[questionIndex].choice = choice;\n    } else if(questionIndex===-1) {\n      this.answers[section].push({\n        questionId: question.questionId,\n        choice: choice,\n        //revieweeId and reviewerId to be attached to the answer\n      })\n    }\n    console.log(this.answers);\n  }\n\n  onSubmit(section){\n      this.sendAnswers(this.answers[section]);\n  }\n  \n\n    private sendAnswers(answers) {\n        this.answerService.postAnswers(answers);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/questions/questions.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AnswerService {\n\n  constructor(private http:HttpClient) { }\n  postAnswers(answers){\n    \n    answers.forEach(answer =>{\n      let httpOptions = {\n        questionId: answer.questionId,\n        revieweeId: 'test-user',\n        choice: answer.choice,\n      }\n      \n      this.http.post('/api/answer',httpOptions).subscribe(response =>{\n        console.log('answer submitted');\n      });\n    })\n    console.log(answers);\n    \n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/services/answer.service.ts","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {CanActivate} from '@angular/router'; \n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authService: AuthService) { }\n\n\n  canActivate(route, state:RouterStateSnapshot){\n    if(this.authService.isLoggedIn())\n      return true;\n    \n    // this.router.navigate(['/login'], {queryParams: {returnUrl : state.url}});\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/services/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/catch';\n// import { error } from 'selenium-webdriver';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login = (credentials?) => {\n    const url = \"http://localhost:3000/api/login\";\n    \n    return this.http.post(url, credentials)\n       .map(\n         response => {\n            console.log(response);\n           /*if (response && response['id']) { \n              console.log(response);\n              localStorage.setItem('survey-app-token', response['id']);\n              //localStorage.setItem('survey-app-token', 'sdasdad12qrasdfwr');\n              return true;\n           }\n           return false;*/\n         });\n  }\n\n  logout = () => {\n    localStorage.removeItem('survey-app-token');\n  }\n\n  isLoggedIn =  () => {\n    const access_token = localStorage.getItem('survey-app-token');\n\n    if (!access_token) {\n      return false;\n    }\n\n\n    // let tokenExpData = jwtHelper.getTokenExpirationDate(access_token),\n    //     isExpired = jwtHelper.isTokenExpired(access_token);\n\n    // console.log('date ', tokenExpData);\n    // console.log('isexpired ', isExpired);\n\n    return true;\n\n  }\n\n  getToken = () => {\n    if (this.isLoggedIn()) {\n      return localStorage.getItem('access_token');\n    }\n    return '';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class QuestionService {\n  \n  constructor(private http:HttpClient) { }\n\n  getQuestions() {\n  return this.http.get('/api/question/asdf/');\n  }  \n\n  uploadQuestions(httpOptions){\n    this.http.post('/api/upload',httpOptions).subscribe(response =>{\n        console.log(response);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/app/services/question.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  // server : 'http://localhost:3000/api',\n  projectName : 'survey-app'\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/amith/workspace/expert-spoon/ui/src/main.ts"],"sourceRoot":"webpack:///"}